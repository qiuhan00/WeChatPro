<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		 http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 启用springmvc注解 -->
	<context:annotation-config />
	
	<!-- 配置扫描包-->
	<context:component-scan base-package="com.cfang.WeChat" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		<!-- <context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/> -->
	</context:component-scan>
	
    <!-- 加载资源文件 -->
    <context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>
    
    <!-- 配置jdbc数据源 -->
    <bean id="masterDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
    </bean>
     <bean id="slaveDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=utf8" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
    </bean>
    <bean id="datasource" class="com.cfang.WeChat.utils.DynamicDataSource">
    	<property name="targetDataSources">
    		<map key-type="java.lang.String">  
	            <entry key="slave" value-ref="slaveDataSource"/> 
	        </map>  
    	</property>
    	<!-- 默认目标数据源为主库数据源 -->
    	<property name="defaultTargetDataSource" ref="masterDataSource"></property>
    </bean>
    
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="datasource"/> 
      	 <property name="configurationClass" value="org.hibernate.cfg.AnnotationConfiguration"/>
    	 	<property name="configLocation">
     			<value>
     				classpath:/hibernate.cfg.xml
     			</value>
    	 </property>
        <property name="packagesToScan">
            <list>
                <value>com.cfang.WeChat.model</value>
            </list>
        </property>
        <property name="hibernateProperties">
        <props>
       		<prop key="hibernate.dialect">${hibernate.dialect}</prop>
       		<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
       		<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
       		<!-- 数据库批量查询数 -->
       		<prop key="hibernate.jdbc.fetch_size">10</prop>
       		<!-- 数据库批量更新数 -->
       		<prop key="hibernate.jdbc.batch_size">10</prop>
       		<!-- hibernate-memcache缓存配置开始 -->
       		<!-- 二级缓存 -->
       		<!-- 
       		<prop key="hibernate.cache.use_second_level_cache">true</prop>
       		<prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
       		<prop key="hibernate.cache.region_prefix">${hibernate.cache.region_prefix}</prop> 
       		<prop key="hibernate.cache.use_structured_entries">true</prop> 
       		<prop key="hibernate.cache.use_query_cache">true</prop>
       		<prop key="hibernate.memcached.servers">${memcached.servers}</prop>
       		<prop key="hibernate.memcached.cacheTimeSeconds">${hibernate.memcached.cacheTimeSeconds}</prop> 
       		-->
       		<!-- hibernate-memcache缓存配置结束 -->
      	</props>
		</property>
		<!-- 配置hiberntae拦截器,对公共字段操作 -->
		<!-- <property name="entityInterceptor">
		    <bean id="hibernateInterceptors" class="com.cfang.WeChat.interceptor.HibernateInterceptors"/> 
		    <ref bean="hibernateInterceptors"/>
		</property>-->
    </bean>
    
    <!-- 配置一个事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">  
        <property name="sessionFactory" ref="sessionFactory"/>  
    </bean>
    
    <!-- 开启注解事务 , proxy-target-class:true-基于类， false-基于接口; order=2，读写分离中，
    		事务必须在切换aop(DataSourceAopImpl)数据源之后启动-->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="false" order="2"/>
    
    <!-- 事务异常封装 -->
    <bean id="exceptionResolver" class="com.cfang.WeChat.exception.MyExceptionHandler"/>
    
	<!-- 启动对@AspectJ注解的支持, AOP的注解支持 -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
    
    <!-- 配置数据库注解aop -->
    <!-- 动态切换数据源 -->
    <bean id="dataSourceAdvice" class="com.cfang.WeChat.utils.DataSourceAdvice" />
	<!--配置事务的传播特性 -->  
    <!--  <tx:advice id="txAdvice" transaction-manager="transactionManager">  
        <tx:attributes>  
            <tx:method name="add*" propagation="REQUIRED" />  
            <tx:method name="create*" propagation="REQUIRED" />  
            <tx:method name="save*" propagation="REQUIRED" />  
            <tx:method name="edit*" propagation="REQUIRED" />  
            <tx:method name="update*" propagation="REQUIRED" />  
            <tx:method name="delete*" propagation="REQUIRED" />  
            <tx:method name="remove*" propagation="REQUIRED" /> 
            <tx:method name="*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>  
    </tx:advice>  
    <aop:config>  
    	<aop:pointcut id="txPointcut" expression="execution(* com.cfang.*.service.*.*(..)))"/>
    	<aop:advisor pointcut-ref="txPointcut" advice-ref="dataSourceAdvice" order="1"/>
        <aop:advisor pointcut-ref="txPointcut" advice-ref="txAdvice" order="2"/>  
    </aop:config> -->
</beans>